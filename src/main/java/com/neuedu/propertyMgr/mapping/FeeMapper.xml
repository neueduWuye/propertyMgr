<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.propertyMgr.dao.FeeMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.propertyMgr.pojo.Fee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="owner" property="owner" jdbcType="VARCHAR" />
    <result column="peoperty" property="peoperty" jdbcType="DOUBLE" />
    <result column="peo_type" property="peoType" jdbcType="INTEGER" />
    <result column="repair" property="repair" jdbcType="DOUBLE" />
    <result column="repair_type" property="repairType" jdbcType="INTEGER" />
    <result column="parking" property="parking" jdbcType="DOUBLE" />
    <result column="park_type" property="parkType" jdbcType="INTEGER" />
    <result column="other" property="other" jdbcType="DOUBLE" />
    <result column="all" property="all" jdbcType="DOUBLE" />
    <result column="overage" property="overage" jdbcType="DOUBLE" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="this_time" property="thisTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, owner, peoperty, peo_type, repair, repair_type, parking, park_type, other, all, 
    overage, last_time, this_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.propertyMgr.pojo.Fee" >
    insert into fee (id, owner, peoperty, 
      peo_type, repair, repair_type, 
      parking, park_type, other, 
      all, overage, last_time, 
      this_time)
    values (#{id,jdbcType=INTEGER}, #{owner,jdbcType=VARCHAR}, #{peoperty,jdbcType=DOUBLE}, 
      #{peoType,jdbcType=INTEGER}, #{repair,jdbcType=DOUBLE}, #{repairType,jdbcType=INTEGER}, 
      #{parking,jdbcType=DOUBLE}, #{parkType,jdbcType=INTEGER}, #{other,jdbcType=DOUBLE}, 
      #{all,jdbcType=DOUBLE}, #{overage,jdbcType=DOUBLE}, #{lastTime,jdbcType=TIMESTAMP}, 
      #{thisTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.propertyMgr.pojo.Fee" >
    insert into fee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="peoperty != null" >
        peoperty,
      </if>
      <if test="peoType != null" >
        peo_type,
      </if>
      <if test="repair != null" >
        repair,
      </if>
      <if test="repairType != null" >
        repair_type,
      </if>
      <if test="parking != null" >
        parking,
      </if>
      <if test="parkType != null" >
        park_type,
      </if>
      <if test="other != null" >
        other,
      </if>
      <if test="all != null" >
        all,
      </if>
      <if test="overage != null" >
        overage,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="thisTime != null" >
        this_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="peoperty != null" >
        #{peoperty,jdbcType=DOUBLE},
      </if>
      <if test="peoType != null" >
        #{peoType,jdbcType=INTEGER},
      </if>
      <if test="repair != null" >
        #{repair,jdbcType=DOUBLE},
      </if>
      <if test="repairType != null" >
        #{repairType,jdbcType=INTEGER},
      </if>
      <if test="parking != null" >
        #{parking,jdbcType=DOUBLE},
      </if>
      <if test="parkType != null" >
        #{parkType,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        #{other,jdbcType=DOUBLE},
      </if>
      <if test="all != null" >
        #{all,jdbcType=DOUBLE},
      </if>
      <if test="overage != null" >
        #{overage,jdbcType=DOUBLE},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thisTime != null" >
        #{thisTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.propertyMgr.pojo.Fee" >
    update fee
    <set >
      <if test="owner != null" >
        owner = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="peoperty != null" >
        peoperty = #{peoperty,jdbcType=DOUBLE},
      </if>
      <if test="peoType != null" >
        peo_type = #{peoType,jdbcType=INTEGER},
      </if>
      <if test="repair != null" >
        repair = #{repair,jdbcType=DOUBLE},
      </if>
      <if test="repairType != null" >
        repair_type = #{repairType,jdbcType=INTEGER},
      </if>
      <if test="parking != null" >
        parking = #{parking,jdbcType=DOUBLE},
      </if>
      <if test="parkType != null" >
        park_type = #{parkType,jdbcType=INTEGER},
      </if>
      <if test="other != null" >
        other = #{other,jdbcType=DOUBLE},
      </if>
      <if test="all != null" >
        all = #{all,jdbcType=DOUBLE},
      </if>
      <if test="overage != null" >
        overage = #{overage,jdbcType=DOUBLE},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="thisTime != null" >
        this_time = #{thisTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.propertyMgr.pojo.Fee" >
    update fee
    set owner = #{owner,jdbcType=VARCHAR},
      peoperty = #{peoperty,jdbcType=DOUBLE},
      peo_type = #{peoType,jdbcType=INTEGER},
      repair = #{repair,jdbcType=DOUBLE},
      repair_type = #{repairType,jdbcType=INTEGER},
      parking = #{parking,jdbcType=DOUBLE},
      park_type = #{parkType,jdbcType=INTEGER},
      other = #{other,jdbcType=DOUBLE},
      all = #{all,jdbcType=DOUBLE},
      overage = #{overage,jdbcType=DOUBLE},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      this_time = #{thisTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>