<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.neuedu.propertyMgr.dao.FamilyMapper" >
  <resultMap id="BaseResultMap" type="com.neuedu.propertyMgr.pojo.Family" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="relationship" property="relationship" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="owner_name" property="ownerName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, birthday, relationship, phone, idcard, owner_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from family
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from family
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neuedu.propertyMgr.pojo.Family" >
    insert into family (id, name, sex, 
      birthday, relationship, phone, 
      idcard, owner_name)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birthday,jdbcType=DATE}, #{relationship,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, 
      #{idcard,jdbcType=VARCHAR}, #{ownerName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.neuedu.propertyMgr.pojo.Family" >
    insert into family
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="relationship != null" >
        relationship,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="ownerName != null" >
        owner_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="relationship != null" >
        #{relationship,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null" >
        #{ownerName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neuedu.propertyMgr.pojo.Family" >
    update family
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="relationship != null" >
        relationship = #{relationship,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="ownerName != null" >
        owner_name = #{ownerName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neuedu.propertyMgr.pojo.Family" >
    update family
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      relationship = #{relationship,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      idcard = #{idcard,jdbcType=VARCHAR},
      owner_name = #{ownerName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>